# Biblioteca escolar - Case insensitive en b√∫squedas y duplicados
# Restricciones: solo listas paralelas, sin funciones, sin diccionarios, sin clases
# Men√∫ con match - case

titulos = []
ejemplares = []

while True:
    print("\n=== MEN√ö BIBLIOTECA ESCOLAR ===")
    print("1. Ingresar lista de t√≠tulos")
    print("2. Ingresar lista de ejemplares disponibles")
    print("3. Mostrar cat√°logo con stock")
    print("4. Consultar disponibilidad de un t√≠tulo")
    print("5. Ver t√≠tulos agotados")
    print("6. Agregar t√≠tulo")
    print("7. Actualizar ejemplares (pr√©stamo/devoluci√≥n)")
    print("8. Ver cat√°logo completo")
    print("9. Salir")

    opcion = input("Seleccione una opci√≥n: ")

    if not opcion.isdigit():
        print("‚ö†Ô∏è Error: Debe ingresar un n√∫mero v√°lido.")
        continue

    opcion = int(opcion)

    match opcion:
        case 1:  # Ingresar t√≠tulos
            cantidad = input("¬øCu√°ntos t√≠tulos desea ingresar?: ")
            if not cantidad.isdigit():
                print("‚ö†Ô∏è Error: Ingrese un n√∫mero v√°lido.")
                continue
            cantidad = int(cantidad)

            for i in range(cantidad):
                while True:
                    titulo = input(f"Ingrese el t√≠tulo {i+1}: ").strip()
                    if titulo == "":
                        print("‚ö†Ô∏è Error: El t√≠tulo no puede estar vac√≠o. Intente de nuevo.")
                        continue
                    # comprobaci√≥n de duplicado
                    existe = False
                    for t in titulos:
                        if t.lower() == titulo.lower():
                            existe = True
                            break
                    if existe:
                        print("‚ö†Ô∏è Error: El t√≠tulo ya existe en el cat√°logo (incluso si difiere en may√∫sculas). Intente otro.")
                        continue
                    # si ok, agregar
                    titulos.append(titulo)
                    ejemplares.append(0)
                    break

        case 2:  # Ingresar ejemplares
            if not titulos:
                print("‚ö†Ô∏è Primero debe ingresar t√≠tulos.")
                continue
            for i in range(len(titulos)):
                while True:
                    cantidad = input(f"Ingrese ejemplares para '{titulos[i]}': ")
                    if not cantidad.isdigit():
                        print("‚ö†Ô∏è Error: Debe ingresar un n√∫mero entero no negativo. Intente de nuevo.")
                        continue
                    ejemplares[i] = int(cantidad)
                    break

        case 3:  # Mostrar cat√°logo con stock
            if not titulos:
                print("‚ö†Ô∏è No hay t√≠tulos cargados.")
            else:
                print("\n--- Cat√°logo con stock ---")
                for i in range(len(titulos)):
                    print(f"{titulos[i]}: {ejemplares[i]} copias")

        case 4:  # Consultar disponibilidad
            if not titulos:
                print("‚ö†Ô∏è No hay t√≠tulos cargados.")
                continue
            buscar = input("Ingrese el t√≠tulo a consultar: ").strip()
            if buscar == "":
                print("‚ö†Ô∏è Error: t√≠tulo vac√≠o.")
                continue
            idx = -1
            for j, t in enumerate(titulos): #Recorre pares (indice, elemento)
                if t.lower() == buscar.lower():
                    idx = j
                    break
            if idx == -1:
                print("‚ö†Ô∏è Ese t√≠tulo no se encuentra en el cat√°logo.")
            else:
                print(f"'{titulos[idx]}' tiene {ejemplares[idx]} copias disponibles.")

        case 5:  # Ver t√≠tulos agotados
            if not titulos:
                print("‚ö†Ô∏è No hay t√≠tulos cargados.")
                continue
            agotado_flag = False
            for i in range(len(titulos)):
                if ejemplares[i] == 0:
                    print(f"Agotado: {titulos[i]}")
                    agotado_flag = True
            if not agotado_flag:
                print("‚úÖ No hay t√≠tulos agotados.")

        case 6:  # Agregar t√≠tulo
            nuevo = input("Ingrese el nuevo t√≠tulo: ").strip()
            if nuevo == "":
                print("‚ö†Ô∏è Error: El t√≠tulo no puede estar vac√≠o.")
                continue
            existe = False
            for t in titulos:
                if t.lower() == nuevo.lower():
                    existe = True
                    break
            if existe:
                print("‚ö†Ô∏è Error: El t√≠tulo ya existe.")
                continue
            cant = input("Ingrese la cantidad de ejemplares: ")
            if not cant.isdigit():
                print("‚ö†Ô∏è Error: Ingrese un n√∫mero v√°lido.")
                continue
            titulos.append(nuevo)
            ejemplares.append(int(cant))
            print(f"‚úÖ T√≠tulo '{nuevo}' agregado con {cant} copias.")

        case 7:  # Actualizar ejemplares (pr√©stamo o devoluci√≥n)
            if not titulos:
                print("‚ö†Ô∏è No hay t√≠tulos cargados.")
                continue
            libro = input("Ingrese el t√≠tulo: ").strip()
            if libro == "":
                print("‚ö†Ô∏è Error: t√≠tulo vac√≠o.")
                continue
            idx = -1
            for j, t in enumerate(titulos):
                if t.lower() == libro.lower():
                    idx = j
                    break
            if idx == -1:
                print("‚ö†Ô∏è Ese t√≠tulo no existe en el cat√°logo.")
                continue

            print("1. Pr√©stamo")
            print("2. Devoluci√≥n")
            accion = input("Seleccione una opci√≥n: ")

            if accion == "1":
                cant = input("Ingrese cantidad a prestar: ")
                if not cant.isdigit():
                    print("‚ö†Ô∏è Error: Ingrese un n√∫mero v√°lido.")
                    continue
                cant = int(cant)
                if cant <= 0:
                    print("‚ö†Ô∏è Error: Debe prestar al menos 1 libro.")
                elif cant > ejemplares[idx]:
                    print("‚ö†Ô∏è No hay suficientes ejemplares disponibles.")
                else:
                    ejemplares[idx] -= cant
                    print(f"‚úÖ Pr√©stamo registrado. Ahora quedan {ejemplares[idx]} copias de '{titulos[idx]}'.")

            elif accion == "2":
                cant = input("Ingrese cantidad a devolver: ")
                if not cant.isdigit():
                    print("‚ö†Ô∏è Error: Ingrese un n√∫mero v√°lido.")
                    continue
                cant = int(cant)
                if cant < 1:
                    print("‚ö†Ô∏è Error: Debe devolver al menos 1 libro.")
                else:
                    ejemplares[idx] += cant
                    print(f"‚úÖ Devoluci√≥n registrada. Ahora hay {ejemplares[idx]} copias de '{titulos[idx]}'.")

            else:
                print("‚ö†Ô∏è Opci√≥n inv√°lida.")

        case 8:  # Ver cat√°logo completo (igual que opci√≥n 3)
            if not titulos:
                print("‚ö†Ô∏è No hay t√≠tulos cargados.")
            else:
                print("\n--- Cat√°logo completo ---")
                for i in range(len(titulos)):
                    print(f"{titulos[i]}: {ejemplares[i]} copias")

        case 9:  # Salir
            print("üëã Gracias por usar el sistema de biblioteca. ¬°Hasta pronto!")
            break

        case _:  # Opci√≥n inv√°lida
            print("‚ö†Ô∏è Opci√≥n inv√°lida. Intente de nuevo.")
